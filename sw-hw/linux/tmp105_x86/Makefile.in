# Configure the following variables according to your computer environment
CC = gcc
CBMC = cbmc
GTCC = goto-cc
GTINST = goto-instrument

LLVM_GCC = llvm-gcc
LLVM_LD = llvm-ld 
KLEE = klee

LINUX_SRC = ..
GCC_INCLUDE =  ../../gcc-include
QEMU_SRC = ../../../qemu-hw
GEN = generated

UNWIND = 16
#PROP_NO = 20

# Source code
# --> UGLY: The other files are included in  main.c
#     TODO: Does anyone know how to make cbmc recognize "-include"?
SRC = main.c 

OBJS = $(SRC:%.c=%.o)

KLIB = -I $(LINUX_SRC)/arch/x86/include/  \
       -I $(LINUX_SRC)/arch/x86/kernel/ \
       -I $(LINUX_SRC)/include/ \
       -I $(LINUX_SRC)/lib/ \
       -I $(LINUX_SRC)/drivers/ \
       -I $(LINUX_SRC)/drivers/hwmon/

HLIB = -I $(GCC_INCLUDE)/

QLIB = -I $(QEMU_SRC)/

MYLIB = -I modlib/

HOSTCFLAGS = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 \
             -fomit-frame-pointer 

CFLAGS = -std=gnu99 -nostdinc $(MYLIB) $(KLIB) $(HLIB) $(QLIB) -I ./ $(HOSTCFLAGS) \
         $(SYSDEF)

LDFLAGS = -l rt

SYSDEF = -D__KERNEL__ -D_SYS_ -DCONFIG_I2C -DCONFIG_PM -U__i386__ 

# Add -D__EXPOSE_BUG__ if you want to expose the bug using CBMC
VERDEF = -DI2C_BENCHMARK_PROP_$(PROP_NO) -D__EXPOSE_BUG__ 

# Add -D__EXPOSE_BUG__ if you want to expose the bug using KLEE
PROP = -DI2C_BENCHMARK_PROP_1 \
       -DI2C_BENCHMARK_PROP_2 \
       -DI2C_BENCHMARK_PROP_3 \
       -DI2C_BENCHMARK_PROP_4 \
       -DI2C_BENCHMARK_PROP_5 \
       -DI2C_BENCHMARK_PROP_6 \
       -DI2C_BENCHMARK_PROP_7 \
       -DI2C_BENCHMARK_PROP_8 \
       -DI2C_BENCHMARK_PROP_9 \
       -DI2C_BENCHMARK_PROP_10 \
       -DI2C_BENCHMARK_PROP_11 \
       -DI2C_BENCHMARK_PROP_12 \
       -DI2C_BENCHMARK_PROP_13 \
       -DI2C_BENCHMARK_PROP_14 \
       -DI2C_BENCHMARK_PROP_15 \
       -DI2C_BENCHMARK_PROP_16 \
       -DI2C_BENCHMARK_PROP_17 \
       -DI2C_BENCHMARK_PROP_18 \
       -DI2C_BENCHMARK_PROP_19 \
       -DI2C_BENCHMARK_PROP_20 \
       -D__EXPOSE_BUG__ 

# Not used right now
%.o : %.c
	@echo Compiling: $<
	$(CC) $(CFLAGS) -include $(GEN)/autoconf.h -c -o $@ $<

test.bc: CFLAGS += --emit-llvm 
test.bc:
	@echo ------ Compiling with llvm-gcc: $(SRC)
	$(LLVM_GCC) $(CFLAGS) -c -g $(SRC) -o $@ -include \
	$(GEN)/autoconf.h $(SYSDEF) $(PROP) -D_KLEE_

llvm_ld: test.bc
	$(LLVM_LD) $< -o test.out

klee: test.bc 
	@echo ------ Runing klee:
	@$(KLEE) --optimize --libc=uclibc test.bc

mysystem:
	@echo Compiling with goto-cc: $(SRC)
	@$(GTCC) $(SRC) -o $@ -nostdinc -include $(GEN)/autoconf.h $(MYLIB) \
        $(KLIB) $(HLIB) $(QLIB) -I ./ -D_CBMC_ -D_I2C_NO_IRQ_ $(SYSDEF) $(VERDEF)

verify: mysystem
	@echo Verifying with CBMC: $(SRC)
	@$(CBMC) --unwind $(UNWIND) --no-library $<

dot: mysystem
	@echo Build CFG: $(SRC)
	@$(GTINST) $< mysystem.dot --dot

clean:
	@echo Clean folder...
	@rm mysystem

clean-klee:
	@echo Clean llvm outputs...
	@rm test.bc test.out.bc test.out
