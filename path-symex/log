Logbook, Alex Horn

                |       modulus     |   concrete-sum    |        bst        |      counter      |  insertion-sort   |     merge-sort    |   sum-recursive   |
                +-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+-------------------+ 
                | N=2000            | N=46340           | N=7               | N=500             | N=7               | N=7               | N=46              |
                +---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
                | safe    |  unsafe | safe    | unsafe  | safe    | unsafe  | safe    | unsafe  | safe    | unsafe  | safe    | unsafe  | safe    | unsafe  |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
KLEE, STP-r940  | < 1s    | 24m     | < 1s    | < 1s    | 14m     | < 1s    | 7m 22s  | < 1s    | 36m     | < 1s    | 23m     | < 1s    | 23m     | 32m     |
2014-04-12      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-no-output      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-search=dfs     |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-exit-on-error  |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
KLEE, STP-r940  | < 1s    | 3m 50s  | < 1s    | < 1s    | 10m 47s | < 1s    | 11m 55s | < 1s    | 20m     | < 1s    | 16m     | < 1s    | 23m 29s | 49m23s  |
2014-05-07      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-no-output      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-search=dfs     |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-exit-on-error  |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-use-cache=false|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-use-cex-cache= |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
  false         |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
KLEE, new STP   | < 1s    | 23m 30s | < 1s    | < 1s    | 8m 36s  | < 1s    | 1m 18s  | < 1s    | 21m 48s | < 1s    | 14m 56s | < 1s    | TIMEOUT | TIMEOUT |
2014-05-02      |         |         |         |         |         |         |         |         |         |         |         |         | (6 h)   | (30 m)  |
-no-output      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-search=dfs     |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
-exit-on-error  |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
path-symex      | ERROR   | ERROR   | 3s      | 4s      | ERROR   | ERROR   | 1m 14s  | < 1s    | 36m     | 16m     | WRONG   | LIKELY  | WRONG   | LIKELY  |
2014-04-12      | see     | see     |         |         | see     | see     | --unwind|--unwind |         |         | RESULT  | BAD     | RESULT  | BAD     |
                | remark  | remark  |         |         | remark  | remark  |   500   |  500    |         |         |         | ANALYSIS|         | ANALYSIS|
                |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
CBMC            | 3s      | 3s      | 6s      | 11s     | TIMEOUT |TIMEOUT  | 4s      | 2s      | 1m 36s  | < 1s    | 5s      | < 1s    | TIMEOUT | < 1s    |
2014-04-12/13   |         |         |         |         | 11 h    |2h 30m   |         |         |         |         |         |         | 12 h    |         |
                |         |         |         |         | --unwind|--unwind | --unwind| --unwind|         |         |         |         |         |         |
                |         |         |         |         |   8     |  8      |   500   |   500   |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 46s     | 1m      | 3s      | 3s      | 6s      | 3s      | 2m 13s  | 5s      | 2m 2s   | 3s      | 11m 32s | 10m 7s  | 3s      | 3s      |
2014-04-16      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsChecker      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 1m 28s  | 3s      | 3s      | 8s      | 3s      | 3m 21s  | 1m 11s  | 23s     | 3s      | 19s     | 3s      | 3s      | 3s      |
2014-04-23      |         |         |         |         |         |         |         |         |         |         | seconds |         |         |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 56s     | 3s      | 3s      | 8s      | 3s      | 3m 21s  | 3s      | 21s     | 3s      | 22s     | 3s      | 3s      | 3s      |
2014-04-24      |         |         |         |         |         |         |         |         |         |         | seconds | seconds |         |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 1m 38s  | 3s      | 3s      | 8m 52s  | 3s      | 5m 56s  | 3s      | 15m 38s | 3s      | 7m      | 3s      | 3s      | 3s      |
2014-04-28      |         | 59%     |         |         | 95%     |         | 71%     |         | 94%     |         | 90%     |         |         |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
Z3, BV          |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 5m 15s  | 3s      | 3s      | 2m 38s  | 3s      | 4m 11s  | 3s      | 6m 49s  | 3s      | 4m 23s  | 4s      | TIMEOUT | 3s      |
2014-04-28      |         |         |         |         |         |         |         |         |         |         |         |         | 30m     |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
MathSAT5, BV    |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 3m 42s  | 3s      | 3s      | 1m 57s  | 3s      | 1m 7s   | 3s      | 5m 55s  | 3s      | 3m 21s  | 3s      | TIMEOUT | 3s      |
2014-05-02      |         |         |         |         |         |         |         |         |         |         |         |         | 30m     |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
MathSAT5,cach BV|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
NSE             | 3s      | 5h 28m  | 2s      | 2s      | 10m 51s | 4s      | 6m 36s  | 2s      | 41m 29s | 3s      | 29m 47s | 3s      | 2s      | 2s      |
2014-05-05      |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
Manual transform|         |         |         |         |         |         |         |         |         |         |         |         |         |         |
DfsPruneChecker |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
STP, old        |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+
                |
                |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
                |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
                |         |         |         |         |         |         |         |         |         |         |         |         |         |         |
----------------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+


Remarks (Mid April 2014):

KLEE was built as follows:

  $ ./configure --with-llvm=/nas/ahorn/2014/klee-experiments/llvm-2.9 --with-stp=/nas/ahorn/2014/klee-experiments/stp-r940/install

The majority of benchmarks with KLEE were run on machine dkr12 after executing
the following command:

  $ export PATH=$PATH:/nas/ahorn/2014/klee-experiments/llvm-gcc4.2-2.9-x86_64-linux/bin
  $ export PATH=$PATH:/nas/ahorn/2014/klee-experiments/klee/Release+Asserts/bin

I had to switch to drk11 for "sum-recursive" and "counter", however, because someone
else started to heavily use dkr12 in the middle of the experiments.

For KLEE, the following types of commands were run:

  $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -D N=46 -std=c99 -c -g sum-recursive-safe.c
  $ time klee -no-output -search=dfs -exit-on-error sum-recursive-safe.o

All times correspond to "Elapsed time" as recorded by KLEE in its "info" file.
As a sanity check, I have compared one of these times with the result of the
"time" command on Linux, OK.

Contrary to conventional wisdom, benchmark modulus-unsafe.c shows that symbolic
execution can be much slower at finding a bug than proving program correctness.
This is confirmed by the safe and unsafe "sum-recursive" benchmark where only the
assertion is changed (== versus !=).

If N is increased to eight (8) for insertion-sort/safe, then KLEE does not
produce results within 45 minutes.

For CBMC's path-symex tool, the following type of command was run:

  $ symex -D N=2000 -D ENABLE_CPROVER modulus-safe.c

When necessary "--unwind" was specified (see table).

To avoid the overhead of file I/O, the output program statements in
path_symex.cpp were disabled by modifying the source code.

Both modulus-safe.c and modulus-unsafe.c gave the following errors with
symex after around 3 minutes:

  terminate called after throwing an instance of 'std::bad_alloc'
    what():  std::bad_alloc
  Aborted (core dumped)

For these two benchmarks, I confirmed that decreasing N=1740
gives the right results within around 2 minutes. The error
starts to occur when N<=1745.

Both bst-safe.c and bst-unsafe.c result in "failed to dereference `symbol'".

merge-sort-unsafe.c and sum-recursive-unsafe.c complete in less than one
second but the result is likely unjustified given that path-symex gives
the wrong result for the corresponding safe benchmarks.

The experiments with NSE are currently carried out by first manually
transforming the source code of the benchmarks. The resulting source
code is stored in the "transform/" directory.

The following types of commands are used to compile these sources:

  $ clang++ -std=c++11 -I/path/to/smt-kit/include                 \
                     -L/path/to/smt-kit/target/lib                \
                     -I/path/to/smt-kit/solvers/z3/src/api/c++    \
                     -I/path/to/smt-kit/solvers/z3/src/api        \
                     -L/path/to/smt-kit/solvers/z3/build          \
                     -lz3 -lsmt concrete-sum-safe.cpp

We also need to set the library load path for Z3 to work.
On OS X, this can be done as follows:

  export DYLD_LIBRARY_PATH=/path/to/smt-kit/solvers/z3/build:/path/to/smt-kit/target/lib

On Linux (i.e. dkr11 or dkr12), this export command should be run on
the environment variable LD_LIBRARY_PATH.

Noteworthy, each time in the NSE row is the sum of the compilation
_and_ symbolic execution time. This is, for example, the reason why
the concrete-sum benchmarks take three seconds (the actual runtime
is negligible).

The NSE experiments on 2014-04-24 were like the one on day before except
that we take the "false" branch by default. This is _not_ intended to be
a heuristic but a way to avoid loop unwinding bounds (see "counter",
particularly commit 61c82225d6bf2799c8b).

Remarks (End of April)

Unlike the NSE experiments on the previous days, the experiments on
2014-04-28 were with bit-vector theory (smt::QF_AUFBV_LOGIC). The
percentage gives "Solver time / Total runtime", i.e. the time it
took the solver to check SAT/UNSAT divided by the total runtime.

For MathSAT5, the latest version (Feb 21, 2014) was used. The MathSAT5
experiments were run on a OS X machine which is generally faster than
dkr12 on which the Z3 experiments were run. Moreover, the MathSAT5
experiments required DfsPruneChecker::find_next_path() to reset
m_solver, i.e.

  bool DfsPruneChecker::find_next_path()
  {
    m_solver.reset();
    m_is_feasible = true;
    return DfsChecker::find_next_path();
  }

where smt_msat.h was modified such that

  virtual void __reset() override
  {
    msat_destroy_env(m_env);
    m_env = msat_create_env(m_config);
  }

NB: originally, it was msat_reset_env(m_env) but
it keeps the terms intact which causes obviously
problems in the benchmarks.

Remarks (Beginning of May)

On May 2nd, I've rerun the KLEE experiments with the newest
version of STP. The following commands were used to setup the experiments:

   $ git clone https://github.com/stp/stp.git stp-r940
   $ cd stp-r940
   $ mkdir install
   $ mkdir build
   $ cd build
   $ cmake -G 'Unix Makefiles'  -DCMAKE_INSTALL_PREFIX=/path/to/stp-r940/install ..
   $ make
   $ make install
   $ cd /path/to/klee
   $ make clean
   $ ./configure --with-llvm=/path/to/llvm-2.9 --with-stp=/path/to/stp-r940/install
   $ make ENABLE_OPTIMIZED=1
   $ make check
   $ make unittests

Unlike the KLEE experiments in April, I recorded the time it takes to
compile to LLVM IR. The times are negligible (a few milliseconds). This time
around I also did not specify the -g flag when invoking llvm-gcc (so no debug
information in the object file in case it slows down KLEE). So the llvm-gcc
commands look as follows:

   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=2000 -c modulus-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=2000 -c modulus-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=46340 -c concrete-sum-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=46340 -c concrete-sum-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c bst-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c bst-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=500 -c counter-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=500 -c counter-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c insertion-sort-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c insertion-sort-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c merge-sort-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=7 -c merge-sort-unsafe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=46 -c sum-recursive-safe.c
   $ llvm-gcc --emit-llvm -I ../../klee/include -D ENABLE_KLEE -std=c99 -D N=46 -c sum-recursive-unsafe.c

On May 5th, I've finally managed to get some experimental results for NSE with STP.
Originally, I've tried to use the newest version of STP (particlarly since KLEE seems
to fare well with the newest version, see May 2nd). However, NSE runs into a performance
bug, see https://github.com/stp/stp/issues/101.

To work around this, I've reverted to an older version of STP, stp-r940 as used by KLEE.
However, stp-r940 only builds as a static library (libstp.a). So I refactored the NSE
code to avoid having to mix dynamic and static libraries. This explains the purpose
of the new nse_sequential.h header file.

I found that stp-r940 does not compile on OS X. I therefore used dkr12. But linking
stp-940 is still not easy even on Linux and I ended up building a custom version of
SMT Kit locally on that machine. This involved changing the build system as follows:

Makefile.am:
--------------------------8<--------------------------

# Build rules for libraries.
lib_LTLIBRARIES = lib/libsmt.la

lib_libsmt_la_SOURCES = \
  src/smt.cpp \
  src/nse_sequential.cpp

pkginclude_HEADERS = \
  include/smt \
  include/smt.h \
  include/smt_stp.h \
  include/nse_sequential.h

TESTS = test/smt
check_PROGRAMS = test/smt

test_smt_SOURCES = \
  test/smt_test.cpp \
  test/smt_stp_test.cpp \
  test/nse_sequential_test.cpp \
  test/crv_functional_test.cpp
--------------------------8<--------------------------

configure.ac:
--------------------------8<--------------------------
STP_DIR="solvers/stp"

# Search for SMT and SAT solver libraries
CXXFLAGS="$CXXFLAGS -I$STP_DIR/build/include"
LDFLAGS="$LDFLAGS -L$STP_DIR/build/lib -static -lstp"

AC_SEARCH_LIBS([vc_createValidityChecker], [stp], , AC_MSG_ERROR([Unable to find STP]))
--------------------------8<--------------------------

Notice how all the solvers except STP were removed from the build. We also use the -static flag!
Note that crv.h is gone from the build; instead we only use nse_sequential.h. For this to work,
I manually modified "test/crv_functional_test.cpp" such that only those test cases remained
that use sequential_dfs_checker().

The final step is the actual linking of the benchmark files (e.g. modulus-safe.cpp).
For this, I've used commands of the following form:

   $ g++ -std=c++11 -I/nas/ahorn/2014/smt-kit/include \
                    -I/nas/ahorn/2014/smt-kit/solvers/stp/build/include \
                    -o modulus-safe modulus-safe.cpp \
                    /nas/ahorn/2014/smt-kit/target/lib/libsmt.a \
                    /nas/ahorn/2014/smt-kit/solvers/stp/build/lib/libstp.a

The .a files had to explicitly specified; otherwise, there are linking errors.

The following shall script automates this a little bit:

benchmark_stp.sh:
--------------------------8<--------------------------
#!/bin/bash

CXX="g++"

SMTKIT_PREFIX=$1
GMP_DIR=$2
BENCHMARK=$3

usage() {
  echo "Usage: $0 /path/to/smt-kit /path/to/gmp benchmark"
  exit 1
}

error() {
  echo "$@" 1>&2
  exit 1
}

check_platform() {
  case `uname -s` in
    Darwin|Linux|CYGWIN_*)
      ;;
    *)
      error "Unsupported platform `uname -s`"
      ;;
  esac
}

# Total runtime of compilation and symbolic execution
run() {
  time sh -c "echo ${BENCHMARK}; ${CXX} -std=c++11 -I${SMTKIT_PREFIX}/include -I${SMTKIT_PREFIX}/solvers/stp/build/include -o ${BENCHMARK} "${BENCHMARK}.cpp" ${SMTKIT_PREFIX}/target/lib/libsmt.a ${SMTKIT_PREFIX}/solvers/stp/build/lib/libstp.a; ./${BENCHMARK}"
}

# basic checks
[[ $# -eq 0 ]] && usage

[ -n "$SMTKIT_PREFIX" ] || error "Please specify SMT Kit prefix"
[ -n "$BENCHMARK" ] || error "Please specify benchmark name"
check_platform

if ! [[ -f "${BENCHMARK}.cpp" ]]; then
  error "Cannot find ${BENCHMARK}.cpp"
else
  run
fi


For the 2014-05-05 KLEE experiment, the modulus-unsafe time
is several hours because it explores the "false" branch in
each for-loop iteration. Unlike other solvers, STP very
slow at solving the conjunction of path constraints for
this problem. I've verified that choosing the "true" branch
lets NSE complete on modulus-unsafe in less than 1 second
even if STP is used as a back-end solver. This suggests
that KLEE uses the "true" branch also.

Explored paths:

* Noteworthy, NSE explores 10569 paths in insertion-sort-safe
  whereas KLEE explores only 7423 paths in insertion-sort-safe.

* NSE explores 14724 paths in merge-sort-safe
  whereas KLEE explores only 6435 paths in merge-sort-safe. 

In all other cases, NSE and KLEE explore the same number of
paths +/- 1 (differences in how paths are counted).

--------------------------8<--------------------------

On May 7th, I rerun the KLEE experiments with the stp-r940 solver
but with the following kinds of command:

  $ klee -no-output -search=dfs -exit-on-error -use-cache=false -use-cex-cache=false modulus-safe.o

The rationale is that KLEE does various caching whilst NSE uses does not.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

On May 9th, I've rerun the modulus-safe.c path-symex experiment with N=2000
on OS X; it took 24 minutes to complete with the following configuration:

#undef PATH_SYMEX_LAZY_STATE
#undef PATH_SYMEX_FORK
#define PATH_SYMEX_LAZY_BRANCH

I repeated the experiment but this time with #define PATH_SYMEX_LAZY_STATE.
Then the command "symex -D ENABLE_CPROVER -D N=2000 modulus-safe.c" took
46 minutes to execute (almost twice as slow compared to the experiment
where PATH_SYMEX_LAZY_STATE was undefined).

Recall the path-symex experiment on 2014-04-12. It used the configuration
where all three flags were _undefined_ which resulted in std::bad_alloc!
The GDB backtrace looks as follows:

  #0  0x0000003324a5f0e1 in __cxa_throw () from /lib64/libstdc++.so.6
  #1  0x0000003324a5f6cd in operator new(unsigned long) () from /lib64/libstdc++.so.6
  #2  0x000000000067cb21 in irept::detach (this=0x7fffffffc5c0) at irep.cpp:75
  #3  0x0000000000480964 in irept::write (this=0x7fffffffc5c0) at ../util/irep.h:326
  #4  0x00000000006cd9e6 in irept::get_named_sub (this=0x7fffffffc5c0) at irep.h:226
  #5  0x000000000067d56e in irept::add (this=0x7fffffffc5c0, name=...) at irep.cpp:469
  #6  0x0000000000480b9f in exprt::type (this=0x7fffffffc5c0) at ../util/expr.h:56
  #7  0x000000000069e436 in simplify_exprt::simplify_inequality (this=0x7fffffffce40, expr=...) at simplify_expr.cpp:3121
  #8  0x00000000006aa61a in simplify_exprt::simplify_node (this=0x7fffffffce40, expr=...) at simplify_expr.cpp:5348
  #9  0x00000000006abdda in simplify_exprt::simplify_rec (this=0x7fffffffce40, expr=...) at simplify_expr.cpp:5513
  #10 0x00000000006abd81 in simplify_exprt::simplify_rec (this=0x7fffffffce40, expr=...) at simplify_expr.cpp:5508
  #11 0x00000000006da90f in simplify_exprt::simplify (this=0x7fffffffce40, expr=...) at simplify_expr_class.h:115
  #12 0x00000000006abef9 in simplify_expr (src=..., ns=...) at simplify_expr.cpp:5560
  #13 0x00000000006e997e in path_symex_statet::read (this=0x212b3d500, src=..., propagate=true) at path_symex_state.cpp:174
  #14 0x00000000006f580b in path_symex_statet::read (this=0x212b3d500, src=...) at path_symex_state.h:243
  Python Exception <type 'exceptions.IndexError'> list index out of range:
  #15 0x00000000006f0610 in path_symext::do_goto (this=0x7fffffffd0ef, state=..., further_states=std::list) at path_symex.cpp:828
  Python Exception <type 'exceptions.IndexError'> list index out of range:
  #16 0x00000000006f0cc3 in path_symext::operator() (this=0x7fffffffd0ef, state=..., further_states=std::list) at path_symex.cpp:1021
  Python Exception <type 'exceptions.IndexError'> list index out of range:
  #17 0x00000000006f12a3 in path_symex (state=..., further_states=std::list) at path_symex.cpp:1163
  #18 0x000000000070532e in path_searcht::operator() (this=0x7fffffffd3b0, goto_functions=...) at path_search.cpp:155
  #19 0x0000000000701f39 in symex_parseoptionst::doit (this=0x7fffffffd6d0) at symex_parseoptions.cpp:259
  #20 0x000000000068330c in parseoptions_baset::main (this=0x7fffffffd6d0) at parseoptions.cpp:104
  #21 0x0000000000700842 in main (argc=6, argv=0x7fffffffdc28) at symex_main.cpp:36

The problem cannot be reproduced on OS X where I rerun symex compiled
without any of the three flags, i.e. #undef PATH_SYMEX_LAZY_STATE,
PATH_SYMEX_FORK, and PATH_SYMEX_LAZY_BRANCH.
